<?php

use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

function butte_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $suggestions[] = 'page__node__' . $node->getType();
    }
}
function butte_preprocess_breadcrumb(&$variables) {
     $request = \Drupal::request();

    if (($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']) {
        $variables['breadcrumb'][] = array(
            'text' => $node->getTitle(),
        );
    } elseif ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
        $variables['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
        $variables['breadcrumb'][] = array(
            'text' => $variables['title'],
        );
    }
}

function butte_preprocess_block(&$variables) {
global $base_url;
	switch ($variables['base_plugin_id']) {
	    case 'system_branding_block':
	      $variables['site_logo'] = '';
	      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
	        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
	      }
	    break;

  	}

	if(isset($variables['elements']['#id']) && !empty($variables['elements']['#id'])){
		$block_id = $variables['elements']['#id'];
	  	$block = \Drupal\block\Entity\Block::load($block_id);
	  	if($block->getRegion()){
	  		$region = $block->getRegion();
	  		$variables['region'] = $region;
	  	}
	//config as context module
	}else{
		$variables['region'] = $variables['elements']['#configuration']['region'];
	}
        
            $node = \Drupal::routeMatch()->getParameter('node');
            
//      $blocks_name = array();
//        $arr_block = array();
//        $blocks_name = \Drupal::entityManager()->getStorage('block')->loadByProperties(['region' => 'contact_info', 'theme' => \Drupal::theme()->getActiveTheme()->getName()]);
//        foreach ($blocks_name as $k => $v) {
//            $block = \Drupal\block\Entity\Block::load($k);
//            $arr_block[$k] = (\Drupal::entityManager()->getViewBuilder('block')->view($block));
//            //print render($arr_block[$k]);
//        }
//
//        if (isset($arr_block) && !empty($arr_block)) {
//            $variables['contact_info'] = $arr_block;
//        }
}

function butte_form_contact_message_feedback_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

// Name
    $form['name']['#prefix'] = '<div class="row"><div class="col-md-6">';
    $form['name']['#suffix'] = '</div>';
    $form['name']['#attributes']['placeholder'][] = $form['name']['#title'] . '*';
    $form['name']['#attributes']['class'][] = 'form-control';
    unset($form['name']['#title']);

// Mail
    $form['mail']['#prefix'] = '<div class="col-md-6">';
    $form['mail']['#suffix'] = '</div></div>';
    $form['mail']['#attributes']['placeholder'][] = $form['mail']['#title'] . '*';
    $form['mail']['#attributes']['class'][] = 'form-control';
    unset($form['mail']['#title']);

    $form['subject']['widget'][0]['value']['#attributes']['placeholder'][] = $form['subject']['widget'][0]['#title'] . '*';
    $form['subject']['widget'][0]['value']['#attributes']['class'][] = 'form-control';
//    $form['subject']['widget'][0]['#title'] = '';
    unset($form['subject']['widget'][0]['value']['#title']);

//// Message

    $form['message']['widget'][0]['value']['#attributes']['placeholder'][] = $form['message']['widget'][0]['#title'] . '*';
    $form['message']['widget'][0]['value']['#attributes']['class'][] = 'form-control';
    unset($form['message']['widget'][0]['value']['#title']);
//
//// Submit


}

function butte_preprocess_node(&$vars) {
    global $base_root;
    $vars['base_root'] = $base_root;
      $ntype = $vars['node']->getType();
        if ($ntype == 'blog_post' ){
            if (isset($vars['node']->field_image) && !empty($vars['node']->field_image->getValue()[0]['target_id'])) {

//             $fid = $vars['node']->field_image->getValue()[0]['target_id'];
//             $file = File::load($fid);
                foreach ($node_value= $vars['node']->field_image->getValue() as $k => $v) {
                $fid = $node_value[$k]['target_id'];
                $file = File::load($fid);
                
                  if (ImageStyle::load('image1170x350')) {
                    $image_uri = ImageStyle::load('image1170x350')->buildUrl($file->getFileUri());
                    $vars['img_uri_1170_350'][$k] = '<img class="img-responsive" alt="'.$node_value[$k]['alt'].'" src="'.$image_uri.'" />';;
                    }
                 
                 }
           
         } else {
             $vars['img_uri_1170_350'][0] = '';
         }          
      }elseif ($ntype == 'product'){
            if (isset($vars['node']->uc_product_image) && !empty($vars['node']->uc_product_image->getValue()[0]['target_id'])) {

             $fid = $vars['node']->uc_product_image->getValue()[0]['target_id'];
             $alt_image =$vars['node']->uc_product_image->getValue()[0]['alt'];
             $file = File::load($fid);
                  if (ImageStyle::load('image700x500')) {
                    $image_uri = ImageStyle::load('image700x500')->buildUrl($file->getFileUri());
                    $vars['img_uri_700_500'] = '<img class="img-responsive" alt="'.$alt_image.'" src="'.$image_uri.'" />';;
                    }
            
           
         } else {
             $vars['img_uri_700_500'] = '';
         }          
      }
       
   
    
//    echo '<pre>';print_r($vars['node']->field_service_list_item[0]);echo'</pre>';
    $site_name = \Drupal::config('system.site')->get('name');
    $vars['site_name'] = $site_name;
    $request = \Drupal::request();
    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
        $vars['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }


       if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
        $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
        $term = taxonomy_term_load($term_id);
        //$term_name = $term_object->get('name')->value;
        $vars['current_term'] = $term;
       }
       
       

}

function butte_preprocess_html(&$variables) {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    $variables['attributes']['class'][] = 'ltr';
    $variables['general_setting_tracking_code'] = theme_get_setting('general_setting_tracking_code', $theme);
    $variables['custom_css'] = theme_get_setting('custom_css', $theme);
    $node = \Drupal::routeMatch()->getParameter('node');
}

/**
 * Implements template_preprocess_page().
 */
function butte_preprocess_page(&$variables) {

    global $base_root, $base_url;
    $node = \Drupal::routeMatch()->getParameter('node');
 
   
    if (isset($_GET['sidebar'])) {
        $variables['blog_sidebar'] = $_GET['sidebar'];
    } elseif (!empty(theme_get_setting('sidebar', 'butte'))) {
        $variables['blog_sidebar'] = theme_get_setting('sidebar', 'butte');
    }else{
        $variables['blog_sidebar'] ='right';
    }
    $variables['copyright_text'] = theme_get_setting('copyright_text', 'butte');
    $variables['footer_network'] = theme_get_setting('footer_network', 'butte');
    
    $theme = \Drupal::theme()->getActiveTheme()->getName();
    $variables['theme_path'] = '/'.drupal_get_path('theme', $theme);

    $request = \Drupal::request();
    if ($route = $request->attributes->get(\Symfony\Cmf\Component\Routing\RouteObjectInterface::ROUTE_OBJECT)) {
        $variables['title'] = \Drupal::service('title_resolver')->getTitle($request, $route);
    }
   
    if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
        $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
        $term = taxonomy_term_load($term_id);
        //$term_name = $term_object->get('name')->value;
        $variables['current_term'] = $term;
    }
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $variables['type'] = $node->getType();
    }
    if (!empty(theme_get_setting('layout_style', 'butte'))) {
        $layout = theme_get_setting('layout_style', 'butte');
    } else {
        $layout = 'style_coffee';
        
    }
    if (!empty(theme_get_setting('blog_bg_image_file', 'butte'))) {
        $variables['blog_header_image'] = $base_url . theme_get_setting('blog_bg_image_file', 'butte');
    } else {
        $variables['blog_header_image'] = '';
    }
    
    
    $variables['page_layout'] = $layout ;
    if ($layout == 'style_bakery') {
        $variables['#attached']['library'][] = 'butte/bakery-lib';
    }elseif ($layout == 'style_coffee') {
        $variables['#attached']['library'][] = 'butte/coffee-lib';
    }elseif ($layout == 'style_pizza') {
        $variables['#attached']['library'][] = 'butte/pizza-lib';
    }elseif ($layout == 'style_restaurant') {
        $variables['#attached']['library'][] = 'butte/restaurant-lib';
    }elseif ($layout == 'style_winery') {
        $variables['#attached']['library'][] = 'butte/winery-lib';
    }
    $variables['#attached']['library'][] = 'butte/update-lib';
}

function butte_form_search_block_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    unset($form['search_block_form']['#title']); // remove label form
    $form['actions']['submit']['#value'] = t('Go'); // Change the text on the submit button
}

function butte_preprocess_container(&$variables) {
    $variables['container_type'] = $variables['element']['#type'];
}

//Có tác động đến view blog   được sử dụng trong page--blog.html.twig 
function butte_preprocess_views_view(&$variables) {
    $theme = \Drupal::theme()->getActiveTheme()->getName();
}

function butte_preprocess_uc_cart_block(&$variables){
   
     foreach ($variables['items'] as $key => $item) {
    
    $asd = ($variables['items'][$key]['nid']);
    $storage = \Drupal::entityManager()->getStorage('node');
    $customer = $storage->load($asd);
    if(!empty($customer->uc_product_image->getValue()[0]['target_id'])){
         $fid = ($customer->uc_product_image->getValue()[0]['target_id']);
          $file = File::load($fid);
          $image_uri = ImageStyle::load('image80x80')->buildUrl($file->getFileUri());
        $variables['items'][$key]['image'] = $image_uri;
        $variables['items'][$key]['alt'] = $customer->uc_product_image->getValue()[0]['alt'];
    } else {
        $variables['items'][$key]['image'] = '';
    }
   
//    $uri = file_load($fid)->uri->value;
//    $url = file_create_url($uri);
//    $variables['items'][$key]['image']= $url ;
   
}
}
